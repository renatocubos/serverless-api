service: notes-api
variablesResolutionMode: 20210326

projectDir: ../../

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}-${self:provider.stage}

plugins: ${file(../../globalConfig.yml):plugins}

package: ${file(../../globalConfig.yml):package}

custom:
  jetpack: ${file(../../globalConfig.yml):jetpack}
  scriptHooks: ${file(../../globalConfig.yml):scriptHooks}
  db: ${file(../../globalConfig.yml):database}

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  lambdaHashingVersion: 20201221
  region: ${opt:region, 'us-east-1'}
  memorySize: 128
  versionFunctions: false
  timeout: 3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:us-east-1:*:*"
  environment:
    STAGE: ${opt:stage, 'dev'}
    DB_DIALECT: "postgres"
    DB_NAME: "abalustre"
    DB_USERNAME: "postgres"
    DB_PASSWORD: "postgres"
    DB_HOST: "postgres"
    DB_PORT: "5432"
    DATABASE_URL: "postgresql://${self:custom.db.username}:${self:custom.db.password}@${self:custom.db.host}:${self:custom.db.port}/${self:custom.db.dbname}"
    # DATABASE_URL: postgresql://database-1:B9A429B9FE1838E5.ccinczr4d92w.us-east-1.rds.amazonaws.com:5432/notesapp

functions:
  create:
    handler: ./build/create.handler
    description: "create note"
    events:
      - http:
          path: /notes
          method: post
    layers:
      - ${cf:layers-dev.DepsLayerExport}

  get:
    handler: ./build/get.handler
    description: "get note"
    events:
      - http:
          path: /notes
          method: get
    layers:
      - ${cf:layers-dev.DepsLayerExport}

  update:
    handler: ./build/update.handler
    description: "update note"
    events:
      - http:
          path: /notes/{noteID}
          method: put
    layers:
      - ${cf:layers-dev.DepsLayerExport}

  delete:
    handler: ./build/delete.handler
    description: "delete note"
    events:
      - http:
          path: /notes/{noteID}
          method: delete
    layers:
      - ${cf:layers-dev.DepsLayerExport}
